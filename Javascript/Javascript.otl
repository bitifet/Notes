


ES6:
	Modules:
		http://2ality.com/2014/09/es6-modules-final.html
		https://medium.com/web-on-the-edge/es-modules-in-node-today-32cff914e4b
	Iterators and Generators:
		https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators
		https://scotch.io/amp/tutorials/understanding-the-javascript-forof-loop
	Symbols:
		toPrimitive: https://mobile.twitter.com/joelnet/status/1159570107456204801?s=19
	Private class fields:
		https://flaviocopes.com/javascript-private-class-fields/
	New operators:
		Optional chaining operator (?.)
			 foo?.bar?.baz
		Nullish coalescing operator (??)
			 function(){
			   return (null ?? 42) === 42 &&
			     (undefined ?? 42) === 42 &&
			     (false ?? 42) === false &&
			     ('' ?? 42) === '' &&
			     (0 ?? 42) === 0 &&
			     isNaN(NaN ?? 42);
			 } 


Internationalizaton API (Intl)
	Date & Time:
		Intl.RelativeTimeFormat
		https://twitter.com/wesbos/status/1184893536707207168?s=09
		Polyfill: https://github.com/catamphetamine/relative-time-format
		https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat
		Alternative Libraries:
			Moment
			Date-fns: (lighter) https://date-fns.org/

Memory Management:
	Memory Leaks:
		https://auth0.com/blog/four-types-of-leaks-in-your-javascript-code-and-how-to-get-rid-of-them/
		https://developer.mozilla.org/ca/docs/Web/JavaScript/Memory_Management

Data Types:
	https://codeburst.io/objects-and-hash-tables-in-javascript-a472ad1940d9

Async:
	Tasks vs Microtasks (setTimeout, setImmediate, nextTick, promises...)
		https://twitter.com/joelnet/status/1172155409949483008?s=09
			> let x = 0;
			> console.log(`${++x} Start`); // 1 Start
			> setTimeout(() => console.log(`${++x} setTimeout`)); // 7 setTimeout
			> setImmediate(() => console.log(`${++x} setImmediate`)); //6 setImmediate
			> Promise.resolve()
			>     .then(() => console.log(`${++x} Promise A`)) // 4 Promise A
			>     .then(() => console.log(`${++x} Promise B`)) // 4 Promise B
			> ;
			> process.nextTick(() => console.log(`${++x} process.nextTick`)); // 3 process.nextTick
			> console.log(`${++x} End`); // 2 End
			> // 1 Start
			> // 2 End
			> // 3 process.nextTick
			> // 4 Promise A
			> // 5 Promise B
			> // 6 setImmediate
			> // 7 setTimeout

Bibliografia:
	Articles diversos:
		http://robotlolita.me/2011/10/09/understanding-javascript-oop.html
		http://perfectionkills.com/understanding-delete/
	Event loop:
		http://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/
		http://2014.jsconf.eu/speakers/philip-roberts-what-the-heck-is-the-event-loop-anyway.html
	Curiositats:
		http://www.sitepoint.com/shorthand-javascript-techniques/
	Front-End:
		http://www.frontendhandbook.com/
		Headless Browsers:
			http://phantomjs.org/
			http://slimerjs.org/
			http://triflejs.org/
		Webview development:
			https://cordova.apache.org/
			https://github.com/nwjs/nw.js
			http://electron.atom.io/
		Native:
			https://www.nativescript.org/
			https://facebook.github.io/react-native/
	ShortHands:
		https://www.sitepoint.com/shorthand-javascript-techniques/
	Large Numbers:
		https://dev.to/briandgls/large-number-addition-in-javascript
	Logging:
		https://egghead.io/courses/js-console-for-power-users?utm_content=buffer9a457&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer
	Blocs:
		http://perfectionkills.com/
		http://robotlolita.me/index.html
	Testing:
		https://testingjavascript.com/

Recopilatoris:
	https://github.com/ericelliott/essential-javascript-links

Articles opini√≥:
	http://www.macwright.org/2016/10/04/everything-is-fine-with-javascript.html

Curiositats:
	https://www.webreflection.co.uk/blog/2016/10/20/markdown-in-console
