Bash script and CLI
===================


Advanced Bash-Scripting Guide
	> http://www.tldp.org/LDP/abs/html/index.html
	String manipulation:
		> http://www.tldp.org/LDP/abs/html/string-manipulation.html
	Colors:
		> https://misc.flogisoft.com/bash/tip_colors_and_formatting
	More:
		> https://helpful.knobs-dials.com/index.php/Command_line_and_bash_notes#Safer_scripts

Piping
	https://workaround.org/linuxtip/pipes

Wilcards
	!! => last command
	!* => args from last command
	!$ => last arg from last command
	!c => last command starting with c
	^c => remove letter c from last command

Daemonization
	https://www.maketecheasier.com/run-bash-commands-background-linux/
	https://stackoverflow.com/a/26912222/4243912
	https://superuser.com/questions/1190854/disowned-jobs-still-stop-on-exit

External tools
	Sed
		http://www.grymoire.com/Unix/Sed.html
		https://github.com/learnbyexample/Command-line-text-processing/blob/master/gnu_sed.md
	lshw ("ls hardware")
	lsblk - List block devices
	To explore:
		Exa ("ls with esteroids")
			https://lamiradadelreplicante.com/2018/04/10/exa-alternativa-al-comando-ls-escrita-en-rust/

/Proc
	https://twitter.com/b0rk/status/981159808832286720/photo/1

Automation
	cron
		@reboot
			 - Commands scheduled at @reboot are executed on cron service startup.
			 - But ONLY if /var/run/crond.reboot file DOES NOT exist.
			 - Just after that, cron creates it to prevent @reboot commands to be re-executed on cron service restart.
			 - Operating System's startup service /etc/init.d/bootclean removes all files in /var/run. That is what cron takes advantage.
			Details: https://www.unixdaemon.net/linux/how-does-cron-reboot-work/
